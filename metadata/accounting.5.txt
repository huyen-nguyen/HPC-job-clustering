ACCOUNTING(5)                 File Formats Manual                ACCOUNTING(5)



NAME
       accounting - Univa Grid Engine accounting file format

DESCRIPTION
       An  accounting  record  is  written to the Univa Grid Engine accounting
       file for each job having finished. The accounting file is processed  by
       qacct(1) to derive accounting statistics.

FORMAT
       Each  job  is represented by a line in the accounting file. Empty lines
       and lines which contain one character or less are ignored.   Accounting
       record  entries  are separated by colon (':') signs. The entries denote
       in their order of appearance:

   qname
       Name of the cluster queue in which the job has run.

   hostname
       Name of the execution host.

   group
       The effective group id of the job owner when executing the job.

   owner
       Owner of the Univa Grid Engine job.

   job_name
       Job name.

   job_number
       Job identifier - job number.

   account
       An account string as specified by the qsub(1) or qalter(1) -A option.

   priority
       Priority value assigned to the job corresponding to the priority param-
       eter in the queue configuration (see queue_conf(5)).

   submission_time
       Submission time (64bit GMT unix time stamp in milliseconds).

   start_time
       Start time (64bit GMT unix time stamp in milliseconds).

   end_time
       End time (64bit GMT unix time stamp in milliseconds).

   failed
       Indicates the problem which occurred in case a job could not be started
       on the execution host (e.g. because the owner of the job did not have a
       valid  account  on that machine). If Univa Grid Engine tries to start a
       job multiple times, this may lead to multiple entries in the accounting
       file corresponding to the same job ID.

   exit_status
       Exit  status of the job script (or Univa Grid Engine specific status in
       case of certain error conditions).  The exit status  is  determined  by
       following the normal shell conventions.  If the command terminates nor-
       mally the value of the command is its exit  status.   However,  in  the
       case  that  the  command exits abnormally, a value of 0200 (octal), 128
       (decimal) is added to the value of the command to make up the exit sta-
       tus.

              For  example:  If a job dies through signal 9 (SIGKILL) then the
              exit status becomes 128 + 9 = 137.

   ru_wallclock
       Difference between end_time and start_time (see above).

       The remainder of the accounting entries follows  the  contents  of  the
       standard UNIX rusage structure as described in getrusage(2).  Depending
       on the operating system where the job was executed some of  the  fields
       may be 0.  The following entries are provided:

              ru_utime
              ru_stime
              ru_maxrss
              ru_ixrss
              ru_ismrss
              ru_idrss
              ru_isrss
              ru_minflt
              ru_majflt
              ru_nswap
              ru_inblock
              ru_oublock
              ru_msgsnd
              ru_msgrcv
              ru_nsignals
              ru_nvcsw
              ru_nivcsw

       On  Windows,  only  the  values ru_wallclock, ru_utime and ru_stime are
       accounted.  These values are the final usage values of the Windows  Job
       object  that  is used to reflect the Univa Grid Engine Job, not the sum
       of the usage of all processes.

   project
       The project which was assigned to the job.

   department
       The department which was assigned to the job.

   granted_pe
       The parallel environment which was selected for that job.

   slots
       The number of slots which were dispatched to the job by the scheduler.

   task_number
       Array job task index number.

   cpu
       The cpu time usage in seconds.

   mem
       The integral memory usage in Gbytes cpu seconds.

   io
       The amount of data transferred in Gbytes.  On  Linux  data  transferred
       means  all  bytes  read  and  written  by  the  job through the read(),
       pread(), write() and pwrite() systems calls.  On Windows  this  is  the
       sum  of all bytes transferred by the job by doing write, read and other
       operations. It's not documented what these other operations are.

   category
       A string specifying the job category.

   iow
       The io wait time in seconds.

   ioops
       The number of io operations.

   pe_taskid
       If this identifier is set the task was part of a parallel job  and  was
       passed to Univa Grid Engine via the qrsh -inherit interface.

   maxvmem
       The maximum vmem size in bytes.

   arid
       Advance reservation identifier. If the job used resources of an advance
       reservation then this field contains a positive integer identifier oth-
       erwise the value is "0" .

   ar_submission_time
       If  the  job  used  resources of an advance reservation then this field
       contains the submission time (64bit GMT unix time  stamp  in  millisec-
       onds) of the advance reservation, otherwise the value is "0" .

   job_class
       If  the job has been running in a job class, the name of the job class,
       otherwise "NONE" .

   qdel_info
       If the job  (the  array  task)  has  been  deleted  via  qdel,  "<user-
       name>@<hostname>",  else  "NONE".   If  qdel was called multiple times,
       every invocation is recorded in a comma separated list.

   maxrss
       The maximum resident set size in bytes.

   maxpss
       The maximum proportional set size in bytes.

   submit_host
       The submit host name.

   cwd
       The working directory the job ran in as specified with  qsub  /  qalter
       switches  -cwd  and  -wd.  As the delimiter used by the accounting file
       (colon ":") can be part of the working  directory  all  colons  in  the
       working directory are replaced by ASCII code 255.

   submit_cmd
       The command line used for job submission.  As the delimiter used by the
       accounting file (colon ":") can be part of the command line all  colons
       in  the  command line are replaced by ASCII code 255.  Line feeds being
       part of the command line will be replaced by a  space  character.   The
       qacct  client  converts them back to colon.  For jobs submitted via the
       DRMAA interface or via qmon graphical  user  interface  the  accounting
       file contains "NONE" as submit_cmd.

   wallclock
       The  wallclock time the job spent in running state.  Times during which
       the job was suspended are not counted as wallclock time.   For  loosely
       integrated jobs and for tightly integrated jobs with accounting summary
       enabled the wallclock time reported for the master task  is  the  wall-
       clock time multiplied by the number of job slots.

SEE ALSO
       sge_intro(1),     qacct(1),     qalter(1),    qsub(1),    getrusage(2),
       queue_conf(5).

COPYRIGHT
       See sge_intro(1) for a full statement of rights and permissions.



Univa Grid Engine File Formats     UGE 8.5.4                     ACCOUNTING(5)
